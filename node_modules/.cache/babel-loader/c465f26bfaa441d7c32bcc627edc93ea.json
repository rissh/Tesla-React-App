{"ast":null,"code":"var _jsxFileName = \"/Users/rishi/Documents/Project/Tesla/tesla-clone/src/components/Section.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Section({\n  title,\n  description,\n  leftBtnText,\n  rightBtnText,\n  backgroundImg\n}) {\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    bgImg: backgroundImg,\n    children: [/*#__PURE__*/_jsxDEV(ItemText, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), \"        \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(LeftButton, {\n          children: leftBtnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), rightBtnText && /*#__PURE__*/_jsxDEV(RightButton, {\n          children: rightBtnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DownArrow, {\n        src: \"/images/down-arrow.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Section;\nexport default Section;\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeate;\n    background-image: url(\"/images/model-s.jpg\");\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-image: ${props => `url(\"/images/${props.bgImg}\")`}\n\n`;\n_c2 = Wrap;\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n`;\n_c3 = ItemText;\nconst Buttons = styled.div`\n\n`;\n_c4 = Buttons;\nconst ButtonGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 768px){\n        flex-direction: column;\n    } \n\n`;\n_c5 = ButtonGroup;\nconst LeftButton = styled.div`\n    background-color: rgba(23, 26, 32, 0.8);\n    height: 40px;\n    width: 256px;\n    color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppersize;\n    font-size: 12px;\n    cursor: pointer;\n    margin: 8px;\n\n`;\n_c6 = LeftButton;\nconst RightButton = styled(LeftButton)`\n    background-color: white;\n    opacity: 0.65;\n    color: black;\n`;\n_c7 = RightButton;\nconst DownArrow = styled.img`\n    height: 40px;\n    overflow-x: hidden;\n    animation: animateDown infinite 1.5s;\n`;\n_c8 = DownArrow;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"ItemText\");\n$RefreshReg$(_c4, \"Buttons\");\n$RefreshReg$(_c5, \"ButtonGroup\");\n$RefreshReg$(_c6, \"LeftButton\");\n$RefreshReg$(_c7, \"RightButton\");\n$RefreshReg$(_c8, \"DownArrow\");","map":{"version":3,"sources":["/Users/rishi/Documents/Project/Tesla/tesla-clone/src/components/Section.js"],"names":["React","styled","Section","title","description","leftBtnText","rightBtnText","backgroundImg","Wrap","div","props","bgImg","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA,WAAtB;AAAmCC,EAAAA,YAAnC;AAAiDC,EAAAA;AAAjD,CAAjB,EAAmF;AAC/E,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,aAAb;AAAA,4BACI,QAAC,QAAD;AAAA,8BACI;AAAA,kBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,2BAEI;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,OAAD;AAAA,8BACI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAA,oBACMC;AADN;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIMC,YAAY,iBACV,QAAC,WAAD;AAAA,oBACMA;AADN;AAAA;AAAA;AAAA;AAAA,gBALR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;KAxBQJ,O;AA0BT,eAAeA,OAAf;AAEA,MAAMM,IAAI,GAAGP,MAAM,CAACQ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBC,KAAK,IAAK,gBAAeA,KAAK,CAACC,KAAM,IAAI;AACjE;AACA,CAbA;MAAMH,I;AAeN,MAAMI,QAAQ,GAAGX,MAAM,CAACQ,GAAI;AAC5B;AACA;AACA,CAHA;MAAMG,Q;AAKN,MAAMC,OAAO,GAAGZ,MAAM,CAACQ,GAAI;AAC3B;AACA,CAFA;MAAMI,O;AAIN,MAAMC,WAAW,GAAGb,MAAM,CAACQ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMK,W;AASN,MAAMC,UAAU,GAAGd,MAAM,CAACQ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMM,U;AAiBN,MAAMC,WAAW,GAAGf,MAAM,CAACc,UAAD,CAAa;AACvC;AACA;AACA;AACA,CAJA;MAAMC,W;AAMN,MAAMC,SAAS,GAAGhB,MAAM,CAACiB,GAAI;AAC7B;AACA;AACA;AACA,CAJA;MAAMD,S","sourcesContent":["import React from 'react'\nimport styled from \"styled-components\"\n\nfunction Section({ title, description, leftBtnText, rightBtnText, backgroundImg }) {\n    return (\n        <Wrap bgImg={backgroundImg}>\n            <ItemText>\n                <h1>{ title }</h1>        {/* Temporary Data */} \n                <p>{description }</p>\n            </ItemText>\n            <Buttons>\n                <ButtonGroup>\n                    <LeftButton>\n                        { leftBtnText }\n                    </LeftButton>\n                    { rightBtnText && \n                        <RightButton>\n                            { rightBtnText }\n                        </RightButton>\n                    \n                    }   \n                </ButtonGroup>\n                <DownArrow src=\"/images/down-arrow.svg\" />\n            </Buttons>    \n            \n        </Wrap>   \n    )\n}\n\nexport default Section\n\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeate;\n    background-image: url(\"/images/model-s.jpg\");\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-image: ${props => `url(\"/images/${props.bgImg}\")`}\n\n`\n\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n`\n\nconst Buttons = styled.div`\n\n`\n\nconst ButtonGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 768px){\n        flex-direction: column;\n    } \n\n`\n\nconst LeftButton = styled.div`\n    background-color: rgba(23, 26, 32, 0.8);\n    height: 40px;\n    width: 256px;\n    color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppersize;\n    font-size: 12px;\n    cursor: pointer;\n    margin: 8px;\n\n`\n\nconst RightButton = styled(LeftButton)`\n    background-color: white;\n    opacity: 0.65;\n    color: black;\n`\n\nconst DownArrow = styled.img`\n    height: 40px;\n    overflow-x: hidden;\n    animation: animateDown infinite 1.5s;\n`"]},"metadata":{},"sourceType":"module"}